if (message.hasMedia) {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è
    const media = await message.downloadMedia();
    console.log(media);

    // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ –Ω–µ —É–¥–∞–ª–∞—Å—å, –≤—ã–≤–æ–¥–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
    if (!media) return console.log("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏.");

    let extension = ""; // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–∞

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞ –∏ –∑–∞–¥–∞—ë–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–µ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
    if (media.mimetype.includes("image")) {
        extension = "jpg"; // –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    } else if (media.mimetype.includes("video")) {
        extension = "mp4"; // –í–∏–¥–µ–æ
    } else if (media.mimetype.includes("audio")) {
        extension = "mp3"; // –ê—É–¥–∏–æ
    }

    // –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç–∏ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞
    const folderPath = path.join(__dirname, 'media', `${groupId}`, `${phone}`, `${extension}`);
    const filePath = path.join(folderPath, `${messageId}.${extension}`);

    // –ï—Å–ª–∏ –ø–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞—ë–º –µ—ë
    if (!fs.existsSync(folderPath)) {
        fs.mkdirSync(folderPath, { recursive: true });
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –º–µ–¥–∏–∞—Ñ–∞–π–ª –≤ —É–∫–∞–∑–∞–Ω–Ω—É—é –ø–∞–ø–∫—É
    await fs.promises.writeFile(filePath, Buffer.from(media.data, "base64"));

    // –ï—Å–ª–∏ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –µ–≥–æ
    if (extension === "jpg") {
        const imageBuffer = await fs.promises.readFile(filePath); // –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
        const base64Image = imageBuffer.toString("base64"); // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ Base64
        console.log(imageBuffer);

        // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞ –∞–Ω–∞–ª–∏–∑
        const imgAnalysisResult = await getResponseImg(base64Image);
        console.log(`üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ${imgAnalysisResult}`);
    } 
    // –ï—Å–ª–∏ —ç—Ç–æ –≤–∏–¥–µ–æ, –∏–∑–≤–ª–µ–∫–∞–µ–º –∫–∞–¥—Ä—ã –∏ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Ö
    else if (extension === "mp4") {
        const frameFolder = path.join(__dirname, "media", groupId, phone, "frames"); // –ü–∞–ø–∫–∞ –¥–ª—è –∫–∞–¥—Ä–æ–≤
        const frames = await extractFrames(filePath, frameFolder); // –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–∞–¥—Ä—ã –∏–∑ –≤–∏–¥–µ–æ
        console.log(frames);

        if (frames.length > 0) {
            console.log(`üì∏ –ò–∑–≤–ª–µ—á–µ–Ω–æ ${frames.length} –∫–∞–¥—Ä–æ–≤ –∏–∑ –≤–∏–¥–µ–æ`);
            const framePaths = frames.map(framePath => framePath); // –ü—É—Ç–∏ –∫ –∫–∞–¥—Ä–∞–º

            // –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–∑–≤–ª–µ—á—ë–Ω–Ω—ã–µ –∫–∞–¥—Ä—ã
            const imgAnalysisResult = await getResponseImg(framePaths);
            console.log(`üîë –û–±—â–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –≤—Å–µ—Ö –∫–∞–¥—Ä–æ–≤: ${imgAnalysisResult}`);
        }
    }

    // –í—ã–≤–æ–¥–∏–º –ø—É—Ç—å –∫ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–º—É —Ñ–∞–π–ª—É
    console.log(filePath);
}